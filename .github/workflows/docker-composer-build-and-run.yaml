name: docker compose build and run

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      tag:
        required: true
        type: string
      number-of-services:
        required: true
        type: number
      cmd:
        required: true
        type: string
    secrets:
      dockerhub_user:
        required: true
      dockerhub_pass:
        required: true
env:
  TAG: ${{ inputs.tag }}

jobs:
  docker_compose_build_and_run:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: setup
      run: |
        docker login -u ${{ secrets.dockerhub_user }} -p ${{ secrets.dockerhub_pass }}
        docker-compose -f docker-compose.test.yml pull
        docker-compose -f docker-compose.test.yml up -d
        docker-compose -f docker-compose.test.yml exec -T ${{ inputs.application-name }} bin/rails db:drop db:create db:test:prepare
        sleep 5
        # wait for all services to be started
        echo "wait for all services to be started"
        while :
        do
        SERVICES=$(docker-compose -f docker-compose.test.yml ps)
        if echo $SERVICES | grep '(health: starting)' >> /dev/null; then
            echo "waiting for services to start ..."
            echo
            echo "$SERVICES" | grep '(health: starting)'
            sleep 2
        else
            echo "services started"
            echo "$SERVICES"
            break
        fi
        done

        # check if all services are running
        RUNNING=$(docker-compose -f docker-compose.test.yml ps --services --filter "status=running" | wc -l)
        if [ "$RUNNING" != ${{ inputs.number-of-services}}]; then echo "not all services are running"; docker-compose -f docker-compose.test.yml logs; exit 1; fi

        # check if the app is healty
        STATUS=$(docker inspect --format "{{.State.Health.Status}}" $(docker-compose -f docker-compose.test.yml ps -q ${{ inputs.application-name }} ))
        if [ "$STATUS" != "healthy" ]; then echo "${{ inputs.application-name }} is not healthy"; docker-compose -f docker-compose.test.yml ps; exit 1; fi

    - name: Run command
      run: |
        docker-compose -f docker-compose.test.yml exec -T ${{ inputs.application-name }} ${{ inputs.cmd}}

    - name: Stop containers
      if: always()
      run: docker-compose -f docker-compose.test.yml down
